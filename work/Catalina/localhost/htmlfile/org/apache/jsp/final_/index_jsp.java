/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.16
 * Generated at: 2022-07-05 01:35:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.final_;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.mysql.jdbc.Driver;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mysql.jdbc.Driver");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    \r\n");
      out.write("    <head>\r\n");
      out.write("        <title>AI 2000人工智能学者可视化</title>\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body style=\"background-color:azure;\">\r\n");
      out.write("        <canvas id=\"myCanvas\" style=\"position: absolute;visibility: hidden;\"></canvas>  \r\n");
      out.write("\r\n");
      out.write("        <h1 style=\"text-align: center;\" class=\"h1ader\">AI 2000人工智能学者可视化</h1>\r\n");
      out.write("\r\n");
      out.write("        <h3 style=\"text-align: center;\">小组成员：蒋卓良，李傲然</h3>\r\n");
      out.write("\r\n");
      out.write("        <h2 style=\"text-align: center;\">最具影响力学者所属国家及机构</h2>\r\n");
      out.write("        <svg class=\"treeGraphSVG\" style=\"width:100%;height:1350px\"></svg>\r\n");
      out.write("\r\n");
      out.write("        <h2 style=\"text-align: center;\">被提名学者占比最高的国家和机构</h2>\r\n");
      out.write("        <svg class=\"countrySVG\" style=\"width:100%;height:550px\"></svg>\r\n");
      out.write("\r\n");
      out.write("        <h2 style=\"text-align: center;\" class=\"h2ader\">各领域杰出人物及领域关键词</h2>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"box\">\r\n");
      out.write("            <div class=\"weibo\" id=\"demo\">选择领域<i class=\"select\"></i></div>\r\n");
      out.write("            <ul class=\"weiboList\">\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962bde8')\">经典AI (AAAI/IJCAI)</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c006')\">机器学习</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c0af')\">计算机视觉</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c145')\">自然语言处理</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c218')\">机器人</li>\r\n");
      out.write("\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c073')\">知识工程</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c1a3')\">语音识别</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c02d')\">数据挖掘</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962bfbe')\">信息检索与推荐</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c273')\">数据库</li>\r\n");
      out.write("\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962bf3c')\">人机交互</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c104')\">计算机图形</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c2a4')\">多媒体</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962bf6c')\">可视化</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962bea3')\">安全与隐私</li>\r\n");
      out.write("\r\n");
      out.write("                <li onclick=\"drawAll('5dee1f3316f1663a63471ba9')\">计算机网络</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c2cc')\">计算机系统</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962be57')\">计算理论</li>\r\n");
      out.write("                <li onclick=\"drawAll('5debb11593d709897c4ee447')\">芯片技术</li>\r\n");
      out.write("                <li onclick=\"drawAll('5dc122672ebaa6faa962c2e1')\">物联网</li>\r\n");
      out.write("\r\n");
      out.write("                <li onclick=\"drawAll('6176111f302569a70eab4245')\">虚拟现实</li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <svg class=\"domainSVG\" style=\"width:100%;height:500px\"></svg>\r\n");
      out.write("        <svg class=\"domainSVG2\" style=\"width:100%;height:500px\"></svg>\r\n");
      out.write("\r\n");
      out.write("        <h2 style=\"text-align: center;\">学者间合作关系与论文发表情况</h2>\r\n");
      out.write("        <input type=\"text\" id=\"myinput\" style=\"position:absolute;left: 42%;\"/>\r\n");
      out.write("        <button onclick=\"searchData2()\" style=\"position:absolute;left: 55%;\">搜索</button>\r\n");
      out.write("\r\n");
      out.write("        <svg class=\"authorSVG\" style=\"width:100%;height:300px\"></svg>\r\n");
      out.write("        <svg class=\"authorSVG2\" style=\"width:100%;height:400px\"></svg>\r\n");
      out.write("    </body>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    ");

        String driverName="com.mysql.jdbc.Driver";
        String userName="root";
        String userPasswd="jzljzl233";
        String dbName="english";
        String tableName="countrydata";
        String url="jdbc:mysql://localhost/"+dbName+"?user="+userName+"&password="+userPasswd;
        Class.forName(driverName).newInstance();
        Connection connection=DriverManager.getConnection(url);
        Statement statement=connection.createStatement();

        String sql="Select * from "+tableName;
        ResultSet rs=statement.executeQuery(sql);

        String[] shortName=new String[20];
        String[] name=new String[20];
        String[] value=new String[20];
        String[] picSrc=new String[20];

        int count=0;
        while(rs.next()){
            shortName[count]='"'+rs.getString(2)+'"';
            name[count]='"'+rs.getString(3)+'"';
            value[count]='"'+rs.getString(4)+'"';
            picSrc[count]='"'+rs.getString(5)+'"';
            count++;
        }

        rs.close();
        statement.close();
        connection.close();
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

        driverName="com.mysql.jdbc.Driver";
        userName="root";
        userPasswd="jzljzl233";
        dbName="english";
        tableName="organizationdata";
        url="jdbc:mysql://localhost/"+dbName+"?user="+userName+"&password="+userPasswd;
        Class.forName(driverName).newInstance();
        connection=DriverManager.getConnection(url);
        statement=connection.createStatement();

        sql="Select * from "+tableName;
        rs=statement.executeQuery(sql);

        String[] name2=new String[10];
        String[] value2=new String[10];
        String[] picSrc2=new String[10];

        count=0;
        while(rs.next()&&count<10){
            name2[count]='"'+rs.getString(2)+'"';
            value2[count]='"'+rs.getString(3)+'"';
            picSrc2[count]='"'+rs.getString(4)+'"';
            count++;
        }

        rs.close();
        statement.close();
        connection.close();
    
      out.write("\r\n");
      out.write("    <script src=\"d3.min.js\"></script>\r\n");
      out.write("    <script src=\"jquery.js\"></script>\r\n");
      out.write("    <script src=\"d3.layout.cloud3.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        var color=d3.schemeCategory10\r\n");
      out.write("        var screenwidth=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;\r\n");
      out.write("        var screenheight=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight; \r\n");
      out.write("\r\n");
      out.write("        var createCountryData=new Array(20)\r\n");
      out.write("        ");
for(int i=0;i<20;i++){
      out.write("\r\n");
      out.write("            createCountryData[");
      out.print(i);
      out.write("]={\"shortname\":");
      out.print(shortName[i]);
      out.write(",\"name\":");
      out.print(name[i]);
      out.write(",\"value\":");
      out.print(value[i]);
      out.write(",\"picSrc\":");
      out.print(picSrc[i]);
      out.write("}\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("        var createOrganizationData=new Array(10)\r\n");
      out.write("        ");
for(int i=0;i<10;i++){
      out.write("\r\n");
      out.write("            createOrganizationData[");
      out.print(i);
      out.write("]={\"name\":");
      out.print(name2[i]);
      out.write(",\"value\":");
      out.print(value2[i]);
      out.write(",\"picSrc\":");
      out.print(picSrc2[i]);
      out.write("}\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"createTreeGraph.js\"></script>\r\n");
      out.write("    <script src=\"createCountrySVG.js\"></script>\r\n");
      out.write("    <script src=\"createDomainSVG.js\"></script>\r\n");
      out.write("    <script src=\"createAuthorSVG.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        ul li {\r\n");
      out.write("            list-style: none;\r\n");
      out.write("        }\r\n");
      out.write("        a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #4c4c4c;\r\n");
      out.write("        }\r\n");
      out.write("        a:hover {\r\n");
      out.write("            color: #e88415;\r\n");
      out.write("        }\r\n");
      out.write("        .box {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            width: 180px;\r\n");
      out.write("            margin: 0 43%;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            color: #4c4c4c;\r\n");
      out.write("        }\r\n");
      out.write("        .weibo {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            /* background-color: #fcfcfc; */\r\n");
      out.write("            background-color: azure;\r\n");
      out.write("        }\r\n");
      out.write("        .weibo {\r\n");
      out.write("            display: block;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            line-height: 40px;\r\n");
      out.write("            padding-left: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .change {\r\n");
      out.write("            color: #f9a74f;\r\n");
      out.write("            background-color: #edeef0;\r\n");
      out.write("        }\r\n");
      out.write("        i {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            right: 15px;\r\n");
      out.write("            margin-top: -4px;\r\n");
      out.write("            width: 5px;\r\n");
      out.write("            height: 5px;\r\n");
      out.write("            border-bottom: 1px solid orangered;\r\n");
      out.write("            border-right: 1px solid orangered;\r\n");
      out.write("            transform: rotate(45deg);\r\n");
      out.write("        }\r\n");
      out.write("        .weiboList {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding:0;\r\n");
      out.write("            display: none;\r\n");
      out.write("            height: 200px;\r\n");
      out.write("            overflow: scroll;\r\n");
      out.write("        }\r\n");
      out.write("        .weiboList li {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 148.5px;\r\n");
      out.write("            height: 33px;\r\n");
      out.write("            line-height: 33px;\r\n");
      out.write("            padding-left: 15px;\r\n");
      out.write("            border-bottom: 1px solid #fecc5b;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("        .weiboList li:hover {\r\n");
      out.write("            background-color: #fff5da;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
