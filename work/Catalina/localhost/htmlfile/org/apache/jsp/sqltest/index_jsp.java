/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.16
 * Generated at: 2022-06-13 09:29:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sqltest;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.mysql.jdbc.Driver;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mysql.jdbc.Driver");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<body>\r\n");
      out.write("    <h1 style=\"text-align: right;\">\r\n");
      out.write("        英文单词首字母与词性统计\r\n");
      out.write("    </h1>\r\n");
      out.write("    <h2 style=\"text-align: right;\">\r\n");
      out.write("        19数科蒋卓良\r\n");
      out.write("    </h2>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    ");

        String driverName="com.mysql.jdbc.Driver";
        String userName="root";
        String userPasswd="jzljzl233";
        String dbName="english";
        String tableName="map_enword";
        //String tableName="map_xhzd";
        String url="jdbc:mysql://localhost/"+dbName+"?user="+userName+"&password="+userPasswd;
        Class.forName(driverName).newInstance();
        Connection connection=DriverManager.getConnection(url);
        Statement statement=connection.createStatement();

        String sql="Select * from "+tableName+" order by english";
        ResultSet rs=statement.executeQuery(sql);
        String[] words=new String[5668];
        String[] yinbiao=new String[5668];
        String[] chinese=new String[5668];
        int count=0;
        while(rs.next()){
            words[count]='"'+rs.getString(2)+'"';
            yinbiao[count]='"'+rs.getString(3)+'"';
            chinese[count]='"'+rs.getString(4)+'"';
            count++;
        }

        rs.close();
        statement.close();
        connection.close();
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script src=\"../package/d3.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        var screenwidth=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;\r\n");
      out.write("        var screenheight=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;\r\n");
      out.write("        screenwidth=screenwidth-50;\r\n");
      out.write("        screenheight=screenheight-180;\r\n");
      out.write("\r\n");
      out.write("        var svg=d3.select(\"body\")\r\n");
      out.write("                .append(\"svg\")\r\n");
      out.write("                .attr(\"width\",screenwidth+40)\r\n");
      out.write("                .attr(\"height\",screenheight+20)\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        var data=new Array(5668)\r\n");
      out.write("        ");
for(int i=0;i<5668;i++){
      out.write("\r\n");
      out.write("            data[");
      out.print(i);
      out.write("]={\"word\":");
      out.print(words[i]);
      out.write(",\"yinbiao\":");
      out.print(yinbiao[i]);
      out.write(",\"chinese\":");
      out.print(chinese[i]);
      out.write("}\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("        // console.log(data)\r\n");
      out.write("\r\n");
      out.write("        var mydata=new Array(26)\r\n");
      out.write("        var firstletter=\"\"\r\n");
      out.write("        var count=0\r\n");
      out.write("        for(var i=0;i<data.length;i++){\r\n");
      out.write("            if(data[i][\"word\"][0].toLowerCase()!=firstletter){\r\n");
      out.write("                // n:名词 v:动词 a:形容词/副词 p:介词 i:语气词 c:连词\r\n");
      out.write("                mydata[count]={\"n\":0,\"v\":0,\"a\":0,\"e\":0,\"o\":0,\"i\":0,\"c\":0,\"start\":data[i][\"word\"][0].toLowerCase(),\"total\":0}\r\n");
      out.write("                count++\r\n");
      out.write("                firstletter=data[i][\"word\"][0].toLowerCase()\r\n");
      out.write("            }\r\n");
      out.write("            if(data[i][\"chinese\"].slice(0,4)==\"prep\"){\r\n");
      out.write("                mydata[count-1][\"e\"]+=1\r\n");
      out.write("            }\r\n");
      out.write("            else if(data[i][\"chinese\"].slice(0,4)==\"pron\"){\r\n");
      out.write("                mydata[count-1][\"o\"]+=1\r\n");
      out.write("            }\r\n");
      out.write("            else{\r\n");
      out.write("                mydata[count-1][data[i][\"chinese\"][0]]+=1\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            mydata[count-1][\"total\"]+=1\r\n");
      out.write("        }\r\n");
      out.write("        // console.log(mydata)\r\n");
      out.write("\r\n");
      out.write("        var color=d3.schemeCategory10\r\n");
      out.write("        \r\n");
      out.write("        svg.selectAll(\"rect\")\r\n");
      out.write("                .data(mydata)\r\n");
      out.write("                .enter()\r\n");
      out.write("                .append(\"rect\")\r\n");
      out.write("                .attr(\"x\",function(d,i){\r\n");
      out.write("                    return Math.round(0.4*screenwidth/mydata.length)*i+25\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"y\",function(d,i){\r\n");
      out.write("                    var dataheight=screenheight*d[\"total\"]/1000\r\n");
      out.write("                    return screenheight-dataheight-10\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"width\",function(d,i){\r\n");
      out.write("                    return Math.round(0.4*0.9*screenwidth/mydata.length)\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"height\",function(d,i){\r\n");
      out.write("                    return screenheight*d[\"total\"]/1000+10\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"fill\",function(d,i){\r\n");
      out.write("                    return color[i%10]\r\n");
      out.write("                })\r\n");
      out.write("                .on(\"click\",function(d,i){\r\n");
      out.write("                    d3.selectAll('[id=\"' +\"rectchart\"+'\"]').attr(\"opacity\",\"100%\")\r\n");
      out.write("                    d3.select(this).attr(\"opacity\",\"50%\")\r\n");
      out.write("                    var letterdata=[\r\n");
      out.write("                        {\"cixing\":\"n.\",\"cipin\":i[\"n\"],\"short\":\"n\"},\r\n");
      out.write("                        {\"cixing\":\"v.\",\"cipin\":i[\"v\"],\"short\":\"v\"},\r\n");
      out.write("                        {\"cixing\":\"a.\",\"cipin\":i[\"a\"],\"short\":\"a\"},\r\n");
      out.write("                        {\"cixing\":\"prep.\",\"cipin\":i[\"e\"],\"short\":\"e\"},\r\n");
      out.write("                        {\"cixing\":\"pron.\",\"cipin\":i[\"o\"],\"short\":\"o\"},\r\n");
      out.write("                        {\"cixing\":\"int.\",\"cipin\":i[\"i\"],\"short\":\"i\"},\r\n");
      out.write("                        {\"cixing\":\"conj.\",\"cipin\":i[\"c\"],\"short\":\"c\"},\r\n");
      out.write("                    ]\r\n");
      out.write("                    var total=i[\"total\"]\r\n");
      out.write("                    var start=i[\"start\"]\r\n");
      out.write("                    var pie=d3.pie().value(function(d){\r\n");
      out.write("                        if(d.cipin==0){\r\n");
      out.write("                            return 0\r\n");
      out.write("                        }\r\n");
      out.write("                        return Math.max(d.cipin,total/100)\r\n");
      out.write("                    })\r\n");
      out.write("                    var piedata=pie(letterdata)\r\n");
      out.write("                    // console.log(piedata)\r\n");
      out.write("                    d3.selectAll('[id=\"' +\"piechart\"+'\"]').remove()\r\n");
      out.write("                    for(var i=0;i<letterdata.length;i++){\r\n");
      out.write("                        d3.selectAll('[id=\"' +letterdata[i].cixing+'\"]').remove()\r\n");
      out.write("                    }\r\n");
      out.write("                    svg.selectAll(\"path\")\r\n");
      out.write("                        .data(piedata)\r\n");
      out.write("                        .enter()\r\n");
      out.write("                        .append(\"path\")\r\n");
      out.write("                        .attr(\"d\",function(e,j){\r\n");
      out.write("                            // console.log(\"outerRadius \"+j+\" : \"+300*letterdata[j].cipin/total)\r\n");
      out.write("                            // var arcPath=d3.arc().innerRadius(0).outerRadius(300*letterdata[j].cipin/total)\r\n");
      out.write("                            var arcPath=d3.arc().innerRadius(0).outerRadius(200)\r\n");
      out.write("                            return arcPath(e)\r\n");
      out.write("                        })\r\n");
      out.write("                        .attr(\"transform\",\"translate(\"+screenwidth*0.6+\",\"+screenheight*0.6+\")\")\r\n");
      out.write("                        .attr(\"stroke\",\"white\")\r\n");
      out.write("                        .attr(\"stroke-width\",\"3px\")\r\n");
      out.write("                        .attr(\"id\",\"piechart\")\r\n");
      out.write("                        .attr(\"fill\",function(d,i){\r\n");
      out.write("                            return color[i]\r\n");
      out.write("                        })\r\n");
      out.write("                        .on(\"mouseover\",function(f,k){\r\n");
      out.write("                            d3.select(this).attr(\"opacity\",\"50%\")\r\n");
      out.write("                            a=piedata.indexOf(k)\r\n");
      out.write("                            cx=letterdata[a][\"short\"]\r\n");
      out.write("                            // console.log(cx+\" \"+start)\r\n");
      out.write("                            var fiveword=[]\r\n");
      out.write("                            for(var x=0;x<data.length;x++){\r\n");
      out.write("                                if(cx==\"e\"||cx==\"o\"){\r\n");
      out.write("                                    if(data[x][\"word\"][0].toLowerCase()==start&&data[x][\"chinese\"].slice(0,5)==letterdata[a][\"cixing\"]){\r\n");
      out.write("                                        fiveword[fiveword.length]={\"word\":data[x][\"word\"],\"yinbiao\":data[x][\"yinbiao\"],\"chinese\":data[x][\"chinese\"]}\r\n");
      out.write("                                        if(fiveword.length==6){\r\n");
      out.write("                                            break\r\n");
      out.write("                                        }\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                                else{\r\n");
      out.write("                                    if(data[x][\"word\"][0].toLowerCase()==start&&data[x][\"chinese\"][0]==cx){\r\n");
      out.write("                                        fiveword[fiveword.length]={\"word\":data[x][\"word\"],\"yinbiao\":data[x][\"yinbiao\"],\"chinese\":data[x][\"chinese\"]}\r\n");
      out.write("                                        if(fiveword.length==6){\r\n");
      out.write("                                            break\r\n");
      out.write("                                        }\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                                \r\n");
      out.write("                            }\r\n");
      out.write("                            d3.selectAll('[id=\"' +letterdata[a][\"cixing\"]+'\"]').style(\"visibility\",\"visible\")\r\n");
      out.write("                            // console.log(fiveword)\r\n");
      out.write("                            svg.selectAll(\"text1\")\r\n");
      out.write("                                .data(fiveword)\r\n");
      out.write("                                .enter()\r\n");
      out.write("                                .append(\"text\")\r\n");
      out.write("                                .text(function(d,i){\r\n");
      out.write("                                    return d[\"word\"]\r\n");
      out.write("                                })\r\n");
      out.write("                                .attr(\"font-size\",20)\r\n");
      out.write("                                .attr(\"transform\",function(d,i){\r\n");
      out.write("                                    return \"translate(\"+screenwidth*0.8+\",\"+screenheight*(0.1+i*0.15)+\")\"\r\n");
      out.write("                                })\r\n");
      out.write("                                .attr(\"id\",\"mytext\")\r\n");
      out.write("\r\n");
      out.write("                            svg.selectAll(\"text2\")\r\n");
      out.write("                                .data(fiveword)\r\n");
      out.write("                                .enter()\r\n");
      out.write("                                .append(\"text\")\r\n");
      out.write("                                .text(function(d,i){\r\n");
      out.write("                                    return d[\"yinbiao\"]\r\n");
      out.write("                                })\r\n");
      out.write("                                .attr(\"font-size\",13)\r\n");
      out.write("                                .attr(\"transform\",function(d,i){\r\n");
      out.write("                                    return \"translate(\"+screenwidth*0.8+\",\"+screenheight*(0.15+i*0.15)+\")\"\r\n");
      out.write("                                })\r\n");
      out.write("                                .attr(\"id\",\"mytext\")\r\n");
      out.write("                                \r\n");
      out.write("                            svg.selectAll(\"text3\")\r\n");
      out.write("                                .data(fiveword)\r\n");
      out.write("                                .enter()\r\n");
      out.write("                                .append(\"text\")\r\n");
      out.write("                                .text(function(d,i){\r\n");
      out.write("                                    return d[\"chinese\"]\r\n");
      out.write("                                })\r\n");
      out.write("                                .attr(\"font-size\",13)\r\n");
      out.write("                                .attr(\"transform\",function(d,i){\r\n");
      out.write("                                    return \"translate(\"+screenwidth*0.8+\",\"+screenheight*(0.2+i*0.15)+\")\"\r\n");
      out.write("                                })\r\n");
      out.write("                                .attr(\"id\",\"mytext\")\r\n");
      out.write("                        })\r\n");
      out.write("                        .on(\"mouseout\",function(f,k){\r\n");
      out.write("                            d3.select(this).attr(\"opacity\",\"100%\")\r\n");
      out.write("                            d3.selectAll('[id=\"' +\"mytext\"+'\"]').remove()\r\n");
      out.write("                            d3.selectAll('[id=\"' +letterdata[a][\"cixing\"]+'\"]').style(\"visibility\",\"hidden\")\r\n");
      out.write("                        })\r\n");
      out.write("\r\n");
      out.write("                    svg.selectAll(\"ftext\")\r\n");
      out.write("                        .data(piedata)\r\n");
      out.write("                        .enter()\r\n");
      out.write("                        .append(\"text\")\r\n");
      out.write("                        // .attr(\"x\",function(m,n){\r\n");
      out.write("                        //     return screenwidth*0.6+210*Math.sin(m.startAngle/2+m.endAngle/2)\r\n");
      out.write("                        // })\r\n");
      out.write("                        // .attr(\"y\",function(m,n){\r\n");
      out.write("                        //     return screenheight*0.6+210*Math.cos(m.startAngle/2+m.endAngle/2)\r\n");
      out.write("                        // })\r\n");
      out.write("                        .attr(\"transform\",function(m,n){\r\n");
      out.write("                            return \"translate(\"+screenwidth*0.6+\",\"+screenheight*0.6+\")\"+\r\n");
      out.write("                                    \"translate(\"+210*Math.sin(m.startAngle/2+m.endAngle/2)+\r\n");
      out.write("                                    \",\"+210*Math.cos(m.startAngle/2+m.endAngle/2)*(-1)+\")\"\r\n");
      out.write("                        })\r\n");
      out.write("                        .text(function(m,n){\r\n");
      out.write("                            if(letterdata[n][\"cipin\"]==0){\r\n");
      out.write("                                return \"\"\r\n");
      out.write("                            }\r\n");
      out.write("                            return letterdata[n][\"cixing\"]+\":\"+letterdata[n][\"cipin\"]\r\n");
      out.write("                        })\r\n");
      out.write("                        .attr(\"font-size\",15)\r\n");
      out.write("                        .attr(\"id\",function(d,i){\r\n");
      out.write("                            return letterdata[i].cixing\r\n");
      out.write("                        })\r\n");
      out.write("                        .style(\"visibility\",\"hidden\")\r\n");
      out.write("                        .attr(\"text-anchor\",function(m,n){\r\n");
      out.write("                            return \"middle\"\r\n");
      out.write("                        })\r\n");
      out.write("\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"id\",\"rectchart\")\r\n");
      out.write("\r\n");
      out.write("        svg.append(\"line\")\r\n");
      out.write("                .attr(\"x1\",22)\r\n");
      out.write("                .attr(\"y1\", screenheight)  \r\n");
      out.write("                .attr(\"x2\", 22)\r\n");
      out.write("                .attr(\"y2\", 0)  \r\n");
      out.write("                .attr(\"stroke\", \"black\")  \r\n");
      out.write("                .attr(\"stroke-width\", \"2px\")\r\n");
      out.write("\r\n");
      out.write("        svg.append(\"line\")\r\n");
      out.write("                .attr(\"x1\",22)\r\n");
      out.write("                .attr(\"y1\", screenheight)  \r\n");
      out.write("                .attr(\"x2\", screenwidth*0.43)\r\n");
      out.write("                .attr(\"y2\", screenheight)  \r\n");
      out.write("                .attr(\"stroke\", \"black\")  \r\n");
      out.write("                .attr(\"stroke-width\", \"2px\")\r\n");
      out.write("\r\n");
      out.write("        svg.selectAll(\"ltext\")\r\n");
      out.write("                .data(mydata)\r\n");
      out.write("                .enter()\r\n");
      out.write("                .append(\"text\")\r\n");
      out.write("                .attr(\"x\",function(d,i){\r\n");
      out.write("                    return Math.round(0.4*screenwidth/mydata.length)*i+25+Math.round(0.2*0.9*screenwidth/mydata.length)\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"y\",function(d,i){\r\n");
      out.write("                    return screenheight*1.03\r\n");
      out.write("                })\r\n");
      out.write("                .text(function(d,i){\r\n");
      out.write("                    return d.start\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"font-size\",15)\r\n");
      out.write("                .attr(\"text-anchor\",\"middle\")\r\n");
      out.write("\r\n");
      out.write("        svg.selectAll(\"ltext2\")\r\n");
      out.write("                .data(mydata)\r\n");
      out.write("                .enter()\r\n");
      out.write("                .append(\"text\")\r\n");
      out.write("                .attr(\"x\",function(d,i){\r\n");
      out.write("                    return Math.round(0.4*screenwidth/mydata.length)*i+25+Math.round(0.2*0.9*screenwidth/mydata.length)\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"y\",function(d,i){\r\n");
      out.write("                    var dataheight=screenheight*d[\"total\"]/1000\r\n");
      out.write("                    return screenheight-dataheight-11\r\n");
      out.write("                })\r\n");
      out.write("                .text(function(d,i){\r\n");
      out.write("                    return d.total\r\n");
      out.write("                })\r\n");
      out.write("                .attr(\"font-size\",10)\r\n");
      out.write("                .attr(\"text-anchor\",\"middle\")\r\n");
      out.write("    </script>\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
